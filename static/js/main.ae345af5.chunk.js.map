{"version":3,"sources":["img/logo.png","components/ui/Header.jsx","components/characters/CharacterItem.jsx","img/spinner.gif","components/ui/Spinner.jsx","components/characters/CharacterGrid.jsx","components/ui/Search.jsx","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spin","style","width","margin","display","CharacterGrid","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,iC,OCa1BA,EAVA,WACb,OACE,mCACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,UCuBbC,EA5BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKI,EAAKC,IAAKH,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKK,EAAKE,OACV,+BACE,+BACE,iDADF,IACgCF,EAAKG,aAErC,+BACE,+CADF,IAC8BH,EAAKI,YAEnC,+BACE,+CADF,IAC8BJ,EAAKK,YAEnC,+BACE,6CADF,IAC4BL,EAAKM,sBCtB9B,MAA0B,oCCY1BC,EATC,WACd,OACE,qBACEX,IAAKY,EACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDd,IAAI,aCOKe,EAXO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACvB,OAD8C,EAAhBC,UAE5B,cAAC,EAAD,IAEA,yBAASpB,UAAU,QAAnB,SACGmB,EAAME,KAAI,SAAChB,GAAD,OACT,cAAC,EAAD,CAAkCA,KAAMA,GAApBA,EAAKiB,eCmBlBC,EA1BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAW/B,OACE,yBAAS3B,UAAU,SAAnB,SACE,+BACE,uBACE4B,KAAK,OACL5B,UAAU,eACV6B,YAAY,6BACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAhBAC,EAgBgBD,EAAEE,OAAOJ,MAdzCH,EAAQM,QAGRT,EAASS,GALM,IAACA,GAiBVE,WAAS,SCkBJC,G,MAlCH,WAAM,MAIKX,mBAAS,IAJd,mBAIXN,EAJW,KAILkB,EAJK,OAOaZ,oBAAS,GAPtB,mBAOXL,EAPW,KAODkB,EAPC,OAUKb,mBAAS,IAVd,mBAUXc,EAVW,KAULC,EAVK,KAyBhB,OAZFC,qBAAU,YACQ,uCAAC,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAAuDJ,IADhE,OACTK,EADS,OAIfP,EAASO,EAAOC,MAChBP,GAAa,GALE,2CAAD,qDAOhBQ,KAEA,CAACP,IAGC,sBAAKvC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQwB,SAAU,SAACS,GAAD,OAAKO,EAASP,MAChC,cAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAOA,SC/BlD4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae345af5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from \"react\";\nimport logo from \"../../img/logo.png\";\n\nconst Header = () => {\n  return (\n    <>\n      <header className=\"center\">\n        <img src={logo} alt=\"\"></img>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst CharacterItem = ({ item }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img src={item.img} alt=\"\" />\n        </div>\n        <div className=\"card-back\">\n          <h1>{item.name}</h1>\n          <ul>\n            <li>\n              <strong>Actor Name:</strong> {item.portrayed}\n            </li>\n            <li>\n              <strong>Nickname:</strong> {item.nickname}\n            </li>\n            <li>\n              <strong>Birthday:</strong> {item.birthday}\n            </li>\n            <li>\n              <strong>Status:</strong> {item.status}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CharacterItem;\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from \"react\";\nimport spin from \"../../img/spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <img\n      src={spin}\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n      alt=\"loading\"\n    />\n  );\n};\nexport default Spinner;\n","import React from \"react\";\nimport CharacterItem from \"./CharacterItem\";\nimport Spinner from \"../ui/Spinner\";\n\nconst CharacterGrid = ({ items, isLoading }) => {\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <section className=\"cards\">\n      {items.map((item) => (\n        <CharacterItem key={item.char_id} item={item} />\n      ))}\n    </section>\n  );\n};\nexport default CharacterGrid;\n","import React, { useState } from \"react\";\n\n// dont forget to pass prop(if any) in parameter like this\nconst Search = ({ getQuery }) => {\n  const [text, setText] = useState(\"\");\n\n  const onChange = (q) => {\n    //   changing the text in the text box everytime user input changes\n    setText(q);\n\n    // sending the user input to the app.js via props for searching purpose\n    getQuery(q);\n  };\n\n  return (\n    <section className=\"search\">\n      <form>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for your favourites\"\n          value={text}\n          onChange={(e) => onChange(e.target.value)}\n          autoFocus\n        />\n      </form>\n    </section>\n  );\n};\nexport default Search;\n","import React,{useState,useEffect}from 'react';\nimport axios from  'axios'\nimport Header from './components/ui/Header.jsx';\nimport CharacterGrid from './components/characters/CharacterGrid.jsx';\nimport Search from './components/ui/Search.jsx'\nimport './App.css';\n\nconst App = () => {\n\n//items is the state and setItems is the function used to change the state \n// first it starts with the empty array and then we fetch data from api and assign it to items\nconst [items,setItems]=useState([])\n\n// first, isLoading is true..after we fetch data it will be false\nconst [isLoading,setIsLoading]=useState(true)\n\n// getting search query from search component through props and changing 'query' value\nconst [query,setQuery]=useState('')\n\n// to make the request to api ,we use useEffect hook using axios\nuseEffect(()=>{\n  const fetchItems=async()=>{\n    const result=await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\n\n    // console.log(result.data);\n    setItems(result.data); \n    setIsLoading(false);\n  }\n  fetchItems();\n\n},[query]) //adding query here means the useEffect is firing everytime query changes(i.e.value in searbox changes)\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q)=>setQuery(q)}/>\n      <CharacterGrid isLoading={isLoading} items={items} /> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}